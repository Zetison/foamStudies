#!/bin/bash
MODEL_NAME="cylinder"
NP=4    	# Number of processors
name=${1:-$MODEL_NAME}
if [ -z "$DISPLAY" ]
then
	echo "Error: set the DISPLAY variable" #The display variable should be set for post processing purposes in paraview. This issue arises when using screen, and can be resolved by first getting the display variable outside the screen session (echo $DISPLAY) and then inside the screen session setting the variable to this value (i.e. export DISPLAY=localhost:10.0)"
fi

DICTS="0/epsilon 0/k 0/nut 0/nuTilda 0/omega 0/p 0/s 0/U \
       constant/transportProperties constant/turbulenceProperties \
       system/decomposeParDict system/controlDict \
			 postProcScript.py generate_blockMeshDict_file.c"
SED_VARIABLES="BDD DIAM LENGTH NRE RE MESH OMEGA_ROT \
							 NP START_TIME END_TIME DELTA_T U_INF AREF LREF SIMULATION_TYPE \
							 EPSILON_0 K_0 NUT_0 OMEGA_0 NU MODEL_NAME WRITE_INTERVAL PURGE_WRITE STRIDE"
MESH_ARR=$(seq 6 6)
for MESH in $MESH_ARR
do
	pathToFolder="$HOME/results/openfoam/"$name"_MESH_"$MESH
	rm -rf $pathToFolder/*
	mkdir -p $pathToFolder
	cp -r ./* $pathToFolder
	
	pushd $pathToFolder > /dev/null
	source ./parameters
	source $HOME/kode/bashScripts/sedFiles
			
	g++ generate_blockMeshDict_file.c -o generate_blockMeshDict_file
	./generate_blockMeshDict_file "openfoam"
	blockMesh
	setExprBoundaryFields	

	decomposePar
	mpirun -np $NP pisoFoam -parallel
#	
	python3 convertDatToCSV.py
#	python3 exportResults.py --inputname="postProcessing/forceCoeffs/0/coefficient.dat" --outputname="results_OF_$MESH.txt" --openfoam
#	cat results_OF_$MESH.txt
#	
##	mpiexec -n $NP ~/programs/paraview_build/bin/pvbatch postProcScript.py -mpi 
	~/programs/paraview_build/bin/paraview --script=postProcScript.py
	popd > /dev/null
done
